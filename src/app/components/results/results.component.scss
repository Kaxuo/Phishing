@import 'src/styles.scss';

.page {
  min-height: 100vh;
  background: radial-gradient(ellipse at bottom, #0d1d31 0%, #0c0d13 100%);
  display: flex;
  flex-direction: column;
}

.line {
  margin: 1rem 3rem;
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, auto));
  gap: 1rem;
  justify-content: center;
  overflow: hidden;
  &:has(.card:hover) .card:not(:hover) {
    opacity: 0.5;
    scale: 0.9;
  }
}

.results {
  display: grid;
  grid-template-rows: 1fr auto;
  .lottie {
    height: 10rem;
  }
}

.card {
  display: grid;
  grid-template-columns: 35px 60% 20px;
  align-items: center;
  column-gap: 1rem;
  background-color: $busi-color;
  color: white;
  border-radius: 5px;
  padding: 5px;
  transform: translate(800%);
  animation: translate 0.4s ease-in-out;
  animation-fill-mode: forwards;
  transition: scale 0.2s ease-in-out;
  .text {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }
  .rank {
    font-size: 20px;
    text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #fff, 0 0 20px #228dff, 0 0 35px #228dff, 0 0 40px #228dff;
    transform: rotateX(0) rotateY(-25deg);
    font-family: 'Zefani';
    font-family: 'Abril Fatface';
  }
  @for $i from 1 through 500 {
    &:nth-child(#{$i}) {
      animation-delay: #{calc($i/5)}s;
    }
  }
  &:hover {
    scale: 1.1;
  }
}

.card-skeleton {
  display: grid;
  grid-template-columns: 35px 60% 20px;
  align-items: center;
  column-gap: 1rem;
  background-color: $busi-color;
  color: white;
  border-radius: 5px;
  padding: 5px;
  transform: translate(0%);
  .blank {
    height: 20px !important;
    position: relative;
    pointer-events: none;
    overflow: hidden;
    background-color: #dddbdd !important;
    &::after {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      transform: translateX(-100%);
      background-image: linear-gradient(90deg, rgba(#fff, 0) 0, rgba(#fff, 0.2) 20%, rgba(#fff, 0.5) 60%, rgba(#fff, 0));
      animation: shimmer 0.7s infinite;
      content: '';
    }
  }
  .rank {
    font-size: 20px;
    text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #fff, 0 0 20px #228dff, 0 0 35px #228dff, 0 0 40px #228dff;
    transform: rotateX(0) rotateY(-25deg);
    font-family: 'Zefani';
    font-family: 'Abril Fatface';
  }
}

.hiring {
  height: 15rem;
  padding-bottom: 2rem;
  cursor: pointer;
  transform: translate(0);
}

@keyframes translate {
  0% {
    transform: translate(600%);
  }
  100% {
    transform: translate(0%);
  }
}

@mixin sp-layout {
  @media screen and (max-width: 750px) {
    @content;
  }
}

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

.stars {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 120%;
  transform: rotate(-81deg);
}

.star {
  $star-count: 50;
  --star-color: #346beb;
  --star-tail-length: 6em;
  --star-tail-height: 2px;
  --star-width: calc(var(--star-tail-length) / 6);
  --fall-duration: 9s;
  --tail-fade-duration: var(--fall-duration);

  position: absolute;
  top: var(--top-offset);
  left: 0;
  width: var(--star-tail-length);
  height: var(--star-tail-height);
  color: #346beb;
  background: linear-gradient(45deg, currentColor, transparent);
  border-radius: 50%;
  filter: drop-shadow(0 0 6px currentColor);
  transform: translate3d(104em, 0, 0);
  animation: fall var(--fall-duration) var(--fall-delay) linear infinite, tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;

  @include sp-layout {
    // For mobile performance, tail-fade animation will be removed QAQ
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
  }

  @for $i from 1 through $star-count {
    &:nth-child(#{$i}) {
      --star-tail-length: #{calc(random_range(500em, 750em) / 100)};
      --top-offset: #{calc(random_range(0vh, 10000vh) / 100)};
      --fall-duration: #{calc(random_range(6000, 12000s) / 1000)};
      --fall-delay: #{calc(random_range(0, 10000s) / 1000)};
    }
  }

  &::before,
  &::after {
    position: absolute;
    content: '';
    top: 0;
    left: calc(var(--star-width) / -2);
    width: var(--star-width);
    height: 100%;
    background: linear-gradient(45deg, transparent, currentColor, transparent);
    border-radius: inherit;
    animation: blink 2s linear infinite;
  }

  &::before {
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(-45deg);
  }
}

@keyframes fall {
  to {
    transform: translate3d(-30em, 0, 0);
  }
}

@keyframes tail-fade {
  0%,
  50% {
    width: var(--star-tail-length);
    opacity: 1;
  }

  70%,
  80% {
    width: 0;
    opacity: 0.4;
  }

  100% {
    width: 0;
    opacity: 0;
  }
}

@keyframes blink {
  50% {
    opacity: 0.6;
  }
}
